//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IWCFService")]
public interface IWCFService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/WCFVersion", ReplyAction="http://tempuri.org/IWCFService/WCFVersionResponse")]
    string WCFVersion();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/WCFVersion", ReplyAction="http://tempuri.org/IWCFService/WCFVersionResponse")]
    System.Threading.Tasks.Task<string> WCFVersionAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetLogTopNRecord", ReplyAction="http://tempuri.org/IWCFService/GetLogTopNRecordResponse")]
    System.Collections.Generic.List<string> GetLogTopNRecord(string apiaccess, int topnum);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetLogTopNRecord", ReplyAction="http://tempuri.org/IWCFService/GetLogTopNRecordResponse")]
    System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetLogTopNRecordAsync(string apiaccess, int topnum);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ReloadSettings", ReplyAction="http://tempuri.org/IWCFService/ReloadSettingsResponse")]
    string ReloadSettings(string apiaccess);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ReloadSettings", ReplyAction="http://tempuri.org/IWCFService/ReloadSettingsResponse")]
    System.Threading.Tasks.Task<string> ReloadSettingsAsync(string apiaccess);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/InitNeo4j", ReplyAction="http://tempuri.org/IWCFService/InitNeo4jResponse")]
    string InitNeo4j();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/InitNeo4j", ReplyAction="http://tempuri.org/IWCFService/InitNeo4jResponse")]
    System.Threading.Tasks.Task<string> InitNeo4jAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetWCFDocument", ReplyAction="http://tempuri.org/IWCFService/GetWCFDocumentResponse")]
    System.Collections.Generic.List<string> GetWCFDocument();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetWCFDocument", ReplyAction="http://tempuri.org/IWCFService/GetWCFDocumentResponse")]
    System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetWCFDocumentAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetWCFCache", ReplyAction="http://tempuri.org/IWCFService/GetWCFCacheResponse")]
    string GetWCFCache(string APIAccess);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetWCFCache", ReplyAction="http://tempuri.org/IWCFService/GetWCFCacheResponse")]
    System.Threading.Tasks.Task<string> GetWCFCacheAsync(string APIAccess);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetRequestLogs", ReplyAction="http://tempuri.org/IWCFService/GetRequestLogsResponse")]
    string GetRequestLogs(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetRequestLogs", ReplyAction="http://tempuri.org/IWCFService/GetRequestLogsResponse")]
    System.Threading.Tasks.Task<string> GetRequestLogsAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetActionLogs", ReplyAction="http://tempuri.org/IWCFService/GetActionLogsResponse")]
    string GetActionLogs(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetActionLogs", ReplyAction="http://tempuri.org/IWCFService/GetActionLogsResponse")]
    System.Threading.Tasks.Task<string> GetActionLogsAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetLoginLogs", ReplyAction="http://tempuri.org/IWCFService/GetLoginLogsResponse")]
    string GetLoginLogs(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetLoginLogs", ReplyAction="http://tempuri.org/IWCFService/GetLoginLogsResponse")]
    System.Threading.Tasks.Task<string> GetLoginLogsAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/LoginOneStop", ReplyAction="http://tempuri.org/IWCFService/LoginOneStopResponse")]
    string LoginOneStop(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/LoginOneStop", ReplyAction="http://tempuri.org/IWCFService/LoginOneStopResponse")]
    System.Threading.Tasks.Task<string> LoginOneStopAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/Login", ReplyAction="http://tempuri.org/IWCFService/LoginResponse")]
    string Login(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/Login", ReplyAction="http://tempuri.org/IWCFService/LoginResponse")]
    System.Threading.Tasks.Task<string> LoginAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/LogOff", ReplyAction="http://tempuri.org/IWCFService/LogOffResponse")]
    string LogOff(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/LogOff", ReplyAction="http://tempuri.org/IWCFService/LogOffResponse")]
    System.Threading.Tasks.Task<string> LogOffAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/Verify", ReplyAction="http://tempuri.org/IWCFService/VerifyResponse")]
    string Verify(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/Verify", ReplyAction="http://tempuri.org/IWCFService/VerifyResponse")]
    System.Threading.Tasks.Task<string> VerifyAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/RegisterUser", ReplyAction="http://tempuri.org/IWCFService/RegisterUserResponse")]
    string RegisterUser(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/RegisterUser", ReplyAction="http://tempuri.org/IWCFService/RegisterUserResponse")]
    System.Threading.Tasks.Task<string> RegisterUserAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/CheckEmailExisted", ReplyAction="http://tempuri.org/IWCFService/CheckEmailExistedResponse")]
    string CheckEmailExisted(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/CheckEmailExisted", ReplyAction="http://tempuri.org/IWCFService/CheckEmailExistedResponse")]
    System.Threading.Tasks.Task<string> CheckEmailExistedAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetUsersByOrgCodeStaffCodes", ReplyAction="http://tempuri.org/IWCFService/GetUsersByOrgCodeStaffCodesResponse")]
    string GetUsersByOrgCodeStaffCodes(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetUsersByOrgCodeStaffCodes", ReplyAction="http://tempuri.org/IWCFService/GetUsersByOrgCodeStaffCodesResponse")]
    System.Threading.Tasks.Task<string> GetUsersByOrgCodeStaffCodesAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetUserByOrgCodeStaffCode", ReplyAction="http://tempuri.org/IWCFService/GetUserByOrgCodeStaffCodeResponse")]
    string GetUserByOrgCodeStaffCode(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetUserByOrgCodeStaffCode", ReplyAction="http://tempuri.org/IWCFService/GetUserByOrgCodeStaffCodeResponse")]
    System.Threading.Tasks.Task<string> GetUserByOrgCodeStaffCodeAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetUsersByIDs", ReplyAction="http://tempuri.org/IWCFService/GetUsersByIDsResponse")]
    string GetUsersByIDs(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetUsersByIDs", ReplyAction="http://tempuri.org/IWCFService/GetUsersByIDsResponse")]
    System.Threading.Tasks.Task<string> GetUsersByIDsAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetUserByID", ReplyAction="http://tempuri.org/IWCFService/GetUserByIDResponse")]
    string GetUserByID(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetUserByID", ReplyAction="http://tempuri.org/IWCFService/GetUserByIDResponse")]
    System.Threading.Tasks.Task<string> GetUserByIDAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ActiveUser", ReplyAction="http://tempuri.org/IWCFService/ActiveUserResponse")]
    string ActiveUser(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ActiveUser", ReplyAction="http://tempuri.org/IWCFService/ActiveUserResponse")]
    System.Threading.Tasks.Task<string> ActiveUserAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ImportUsers", ReplyAction="http://tempuri.org/IWCFService/ImportUsersResponse")]
    string ImportUsers(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ImportUsers", ReplyAction="http://tempuri.org/IWCFService/ImportUsersResponse")]
    System.Threading.Tasks.Task<string> ImportUsersAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ChangeUserActiveFlag", ReplyAction="http://tempuri.org/IWCFService/ChangeUserActiveFlagResponse")]
    string ChangeUserActiveFlag(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ChangeUserActiveFlag", ReplyAction="http://tempuri.org/IWCFService/ChangeUserActiveFlagResponse")]
    System.Threading.Tasks.Task<string> ChangeUserActiveFlagAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetUsersByOrganizationCode", ReplyAction="http://tempuri.org/IWCFService/GetUsersByOrganizationCodeResponse")]
    string GetUsersByOrganizationCode(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetUsersByOrganizationCode", ReplyAction="http://tempuri.org/IWCFService/GetUsersByOrganizationCodeResponse")]
    System.Threading.Tasks.Task<string> GetUsersByOrganizationCodeAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetUpdateUsersAfterDate", ReplyAction="http://tempuri.org/IWCFService/GetUpdateUsersAfterDateResponse")]
    string GetUpdateUsersAfterDate(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetUpdateUsersAfterDate", ReplyAction="http://tempuri.org/IWCFService/GetUpdateUsersAfterDateResponse")]
    System.Threading.Tasks.Task<string> GetUpdateUsersAfterDateAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ForgotPassword", ReplyAction="http://tempuri.org/IWCFService/ForgotPasswordResponse")]
    string ForgotPassword(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ForgotPassword", ReplyAction="http://tempuri.org/IWCFService/ForgotPasswordResponse")]
    System.Threading.Tasks.Task<string> ForgotPasswordAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ResetPassword", ReplyAction="http://tempuri.org/IWCFService/ResetPasswordResponse")]
    string ResetPassword(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ResetPassword", ReplyAction="http://tempuri.org/IWCFService/ResetPasswordResponse")]
    System.Threading.Tasks.Task<string> ResetPasswordAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ForgotPasswordReturnToken", ReplyAction="http://tempuri.org/IWCFService/ForgotPasswordReturnTokenResponse")]
    string ForgotPasswordReturnToken(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ForgotPasswordReturnToken", ReplyAction="http://tempuri.org/IWCFService/ForgotPasswordReturnTokenResponse")]
    System.Threading.Tasks.Task<string> ForgotPasswordReturnTokenAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetMeta", ReplyAction="http://tempuri.org/IWCFService/GetMetaResponse")]
    string GetMeta(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetMeta", ReplyAction="http://tempuri.org/IWCFService/GetMetaResponse")]
    System.Threading.Tasks.Task<string> GetMetaAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetMetadata", ReplyAction="http://tempuri.org/IWCFService/GetMetadataResponse")]
    string GetMetadata(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetMetadata", ReplyAction="http://tempuri.org/IWCFService/GetMetadataResponse")]
    System.Threading.Tasks.Task<string> GetMetadataAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetMetadataByUserID", ReplyAction="http://tempuri.org/IWCFService/GetMetadataByUserIDResponse")]
    string GetMetadataByUserID(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetMetadataByUserID", ReplyAction="http://tempuri.org/IWCFService/GetMetadataByUserIDResponse")]
    System.Threading.Tasks.Task<string> GetMetadataByUserIDAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetMetadataByOrganizationID", ReplyAction="http://tempuri.org/IWCFService/GetMetadataByOrganizationIDResponse")]
    string GetMetadataByOrganizationID(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetMetadataByOrganizationID", ReplyAction="http://tempuri.org/IWCFService/GetMetadataByOrganizationIDResponse")]
    System.Threading.Tasks.Task<string> GetMetadataByOrganizationIDAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetMetadataByOrganizationCode", ReplyAction="http://tempuri.org/IWCFService/GetMetadataByOrganizationCodeResponse")]
    string GetMetadataByOrganizationCode(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetMetadataByOrganizationCode", ReplyAction="http://tempuri.org/IWCFService/GetMetadataByOrganizationCodeResponse")]
    System.Threading.Tasks.Task<string> GetMetadataByOrganizationCodeAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetDeviceByID", ReplyAction="http://tempuri.org/IWCFService/GetDeviceByIDResponse")]
    string GetDeviceByID(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetDeviceByID", ReplyAction="http://tempuri.org/IWCFService/GetDeviceByIDResponse")]
    System.Threading.Tasks.Task<string> GetDeviceByIDAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ChangeDeviceActiveFlag", ReplyAction="http://tempuri.org/IWCFService/ChangeDeviceActiveFlagResponse")]
    string ChangeDeviceActiveFlag(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ChangeDeviceActiveFlag", ReplyAction="http://tempuri.org/IWCFService/ChangeDeviceActiveFlagResponse")]
    System.Threading.Tasks.Task<string> ChangeDeviceActiveFlagAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetDevicesByUserID", ReplyAction="http://tempuri.org/IWCFService/GetDevicesByUserIDResponse")]
    string GetDevicesByUserID(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetDevicesByUserID", ReplyAction="http://tempuri.org/IWCFService/GetDevicesByUserIDResponse")]
    System.Threading.Tasks.Task<string> GetDevicesByUserIDAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetOrganizationByID", ReplyAction="http://tempuri.org/IWCFService/GetOrganizationByIDResponse")]
    string GetOrganizationByID(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetOrganizationByID", ReplyAction="http://tempuri.org/IWCFService/GetOrganizationByIDResponse")]
    System.Threading.Tasks.Task<string> GetOrganizationByIDAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetOrganizations", ReplyAction="http://tempuri.org/IWCFService/GetOrganizationsResponse")]
    string GetOrganizations(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetOrganizations", ReplyAction="http://tempuri.org/IWCFService/GetOrganizationsResponse")]
    System.Threading.Tasks.Task<string> GetOrganizationsAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddOrganization", ReplyAction="http://tempuri.org/IWCFService/AddOrganizationResponse")]
    string AddOrganization(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddOrganization", ReplyAction="http://tempuri.org/IWCFService/AddOrganizationResponse")]
    System.Threading.Tasks.Task<string> AddOrganizationAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/UpdateOrganizationByID", ReplyAction="http://tempuri.org/IWCFService/UpdateOrganizationByIDResponse")]
    string UpdateOrganizationByID(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/UpdateOrganizationByID", ReplyAction="http://tempuri.org/IWCFService/UpdateOrganizationByIDResponse")]
    System.Threading.Tasks.Task<string> UpdateOrganizationByIDAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetOrganizationByCode", ReplyAction="http://tempuri.org/IWCFService/GetOrganizationByCodeResponse")]
    string GetOrganizationByCode(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetOrganizationByCode", ReplyAction="http://tempuri.org/IWCFService/GetOrganizationByCodeResponse")]
    System.Threading.Tasks.Task<string> GetOrganizationByCodeAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/UpdateOrganizationByCode", ReplyAction="http://tempuri.org/IWCFService/UpdateOrganizationByCodeResponse")]
    string UpdateOrganizationByCode(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/UpdateOrganizationByCode", ReplyAction="http://tempuri.org/IWCFService/UpdateOrganizationByCodeResponse")]
    System.Threading.Tasks.Task<string> UpdateOrganizationByCodeAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetApplicationByID", ReplyAction="http://tempuri.org/IWCFService/GetApplicationByIDResponse")]
    string GetApplicationByID(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetApplicationByID", ReplyAction="http://tempuri.org/IWCFService/GetApplicationByIDResponse")]
    System.Threading.Tasks.Task<string> GetApplicationByIDAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetApplications", ReplyAction="http://tempuri.org/IWCFService/GetApplicationsResponse")]
    string GetApplications(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetApplications", ReplyAction="http://tempuri.org/IWCFService/GetApplicationsResponse")]
    System.Threading.Tasks.Task<string> GetApplicationsAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddApplication", ReplyAction="http://tempuri.org/IWCFService/AddApplicationResponse")]
    string AddApplication(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddApplication", ReplyAction="http://tempuri.org/IWCFService/AddApplicationResponse")]
    System.Threading.Tasks.Task<string> AddApplicationAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/UpdateApplicationByCode", ReplyAction="http://tempuri.org/IWCFService/UpdateApplicationByCodeResponse")]
    string UpdateApplicationByCode(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/UpdateApplicationByCode", ReplyAction="http://tempuri.org/IWCFService/UpdateApplicationByCodeResponse")]
    System.Threading.Tasks.Task<string> UpdateApplicationByCodeAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ChangeApplicationActiveFlagByCode", ReplyAction="http://tempuri.org/IWCFService/ChangeApplicationActiveFlagByCodeResponse")]
    string ChangeApplicationActiveFlagByCode(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/ChangeApplicationActiveFlagByCode", ReplyAction="http://tempuri.org/IWCFService/ChangeApplicationActiveFlagByCodeResponse")]
    System.Threading.Tasks.Task<string> ChangeApplicationActiveFlagByCodeAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DeleteApplicationByCode", ReplyAction="http://tempuri.org/IWCFService/DeleteApplicationByCodeResponse")]
    string DeleteApplicationByCode(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DeleteApplicationByCode", ReplyAction="http://tempuri.org/IWCFService/DeleteApplicationByCodeResponse")]
    System.Threading.Tasks.Task<string> DeleteApplicationByCodeAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddGroupByParentName", ReplyAction="http://tempuri.org/IWCFService/AddGroupByParentNameResponse")]
    string AddGroupByParentName(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddGroupByParentName", ReplyAction="http://tempuri.org/IWCFService/AddGroupByParentNameResponse")]
    System.Threading.Tasks.Task<string> AddGroupByParentNameAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddGroupByParentID", ReplyAction="http://tempuri.org/IWCFService/AddGroupByParentIDResponse")]
    string AddGroupByParentID(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddGroupByParentID", ReplyAction="http://tempuri.org/IWCFService/AddGroupByParentIDResponse")]
    System.Threading.Tasks.Task<string> AddGroupByParentIDAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetRoleByID", ReplyAction="http://tempuri.org/IWCFService/GetRoleByIDResponse")]
    string GetRoleByID(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetRoleByID", ReplyAction="http://tempuri.org/IWCFService/GetRoleByIDResponse")]
    System.Threading.Tasks.Task<string> GetRoleByIDAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetApplicationRoles", ReplyAction="http://tempuri.org/IWCFService/GetApplicationRolesResponse")]
    string GetApplicationRoles(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetApplicationRoles", ReplyAction="http://tempuri.org/IWCFService/GetApplicationRolesResponse")]
    System.Threading.Tasks.Task<string> GetApplicationRolesAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddRole", ReplyAction="http://tempuri.org/IWCFService/AddRoleResponse")]
    string AddRole(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddRole", ReplyAction="http://tempuri.org/IWCFService/AddRoleResponse")]
    System.Threading.Tasks.Task<string> AddRoleAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/UpdateRoleByAppCodeRoleID", ReplyAction="http://tempuri.org/IWCFService/UpdateRoleByAppCodeRoleIDResponse")]
    string UpdateRoleByAppCodeRoleID(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/UpdateRoleByAppCodeRoleID", ReplyAction="http://tempuri.org/IWCFService/UpdateRoleByAppCodeRoleIDResponse")]
    System.Threading.Tasks.Task<string> UpdateRoleByAppCodeRoleIDAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetRolesByUserIDApplicationID", ReplyAction="http://tempuri.org/IWCFService/GetRolesByUserIDApplicationIDResponse")]
    string GetRolesByUserIDApplicationID(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetRolesByUserIDApplicationID", ReplyAction="http://tempuri.org/IWCFService/GetRolesByUserIDApplicationIDResponse")]
    System.Threading.Tasks.Task<string> GetRolesByUserIDApplicationIDAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DeleteRoleByAppCodeRoleName", ReplyAction="http://tempuri.org/IWCFService/DeleteRoleByAppCodeRoleNameResponse")]
    string DeleteRoleByAppCodeRoleName(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DeleteRoleByAppCodeRoleName", ReplyAction="http://tempuri.org/IWCFService/DeleteRoleByAppCodeRoleNameResponse")]
    System.Threading.Tasks.Task<string> DeleteRoleByAppCodeRoleNameAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddUserToRole", ReplyAction="http://tempuri.org/IWCFService/AddUserToRoleResponse")]
    string AddUserToRole(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddUserToRole", ReplyAction="http://tempuri.org/IWCFService/AddUserToRoleResponse")]
    System.Threading.Tasks.Task<string> AddUserToRoleAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddGroupToRole", ReplyAction="http://tempuri.org/IWCFService/AddGroupToRoleResponse")]
    string AddGroupToRole(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/AddGroupToRole", ReplyAction="http://tempuri.org/IWCFService/AddGroupToRoleResponse")]
    System.Threading.Tasks.Task<string> AddGroupToRoleAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DeleteUserFromRole", ReplyAction="http://tempuri.org/IWCFService/DeleteUserFromRoleResponse")]
    string DeleteUserFromRole(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DeleteUserFromRole", ReplyAction="http://tempuri.org/IWCFService/DeleteUserFromRoleResponse")]
    System.Threading.Tasks.Task<string> DeleteUserFromRoleAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DeleteGroupFromRole", ReplyAction="http://tempuri.org/IWCFService/DeleteGroupFromRoleResponse")]
    string DeleteGroupFromRole(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/DeleteGroupFromRole", ReplyAction="http://tempuri.org/IWCFService/DeleteGroupFromRoleResponse")]
    System.Threading.Tasks.Task<string> DeleteGroupFromRoleAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/UpdateRoleByAppCodeRoleName", ReplyAction="http://tempuri.org/IWCFService/UpdateRoleByAppCodeRoleNameResponse")]
    string UpdateRoleByAppCodeRoleName(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/UpdateRoleByAppCodeRoleName", ReplyAction="http://tempuri.org/IWCFService/UpdateRoleByAppCodeRoleNameResponse")]
    System.Threading.Tasks.Task<string> UpdateRoleByAppCodeRoleNameAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetUsersByOrgCodeAppCodeRoleName", ReplyAction="http://tempuri.org/IWCFService/GetUsersByOrgCodeAppCodeRoleNameResponse")]
    string GetUsersByOrgCodeAppCodeRoleName(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetUsersByOrgCodeAppCodeRoleName", ReplyAction="http://tempuri.org/IWCFService/GetUsersByOrgCodeAppCodeRoleNameResponse")]
    System.Threading.Tasks.Task<string> GetUsersByOrgCodeAppCodeRoleNameAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetGroupsByAppCodeRoleName", ReplyAction="http://tempuri.org/IWCFService/GetGroupsByAppCodeRoleNameResponse")]
    string GetGroupsByAppCodeRoleName(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetGroupsByAppCodeRoleName", ReplyAction="http://tempuri.org/IWCFService/GetGroupsByAppCodeRoleNameResponse")]
    System.Threading.Tasks.Task<string> GetGroupsByAppCodeRoleNameAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetRolesByAppCodeOrgCodeStaffCode", ReplyAction="http://tempuri.org/IWCFService/GetRolesByAppCodeOrgCodeStaffCodeResponse")]
    string GetRolesByAppCodeOrgCodeStaffCode(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetRolesByAppCodeOrgCodeStaffCode", ReplyAction="http://tempuri.org/IWCFService/GetRolesByAppCodeOrgCodeStaffCodeResponse")]
    System.Threading.Tasks.Task<string> GetRolesByAppCodeOrgCodeStaffCodeAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetGroupsByOrgCodeStaffCode", ReplyAction="http://tempuri.org/IWCFService/GetGroupsByOrgCodeStaffCodeResponse")]
    string GetGroupsByOrgCodeStaffCode(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetGroupsByOrgCodeStaffCode", ReplyAction="http://tempuri.org/IWCFService/GetGroupsByOrgCodeStaffCodeResponse")]
    System.Threading.Tasks.Task<string> GetGroupsByOrgCodeStaffCodeAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetApplicationCodesByOrgCodeStaffCode", ReplyAction="http://tempuri.org/IWCFService/GetApplicationCodesByOrgCodeStaffCodeResponse")]
    string GetApplicationCodesByOrgCodeStaffCode(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/GetApplicationCodesByOrgCodeStaffCode", ReplyAction="http://tempuri.org/IWCFService/GetApplicationCodesByOrgCodeStaffCodeResponse")]
    System.Threading.Tasks.Task<string> GetApplicationCodesByOrgCodeStaffCodeAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/SyncCodeTable", ReplyAction="http://tempuri.org/IWCFService/SyncCodeTableResponse")]
    string SyncCodeTable(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/SyncCodeTable", ReplyAction="http://tempuri.org/IWCFService/SyncCodeTableResponse")]
    System.Threading.Tasks.Task<string> SyncCodeTableAsync(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/SyncUser", ReplyAction="http://tempuri.org/IWCFService/SyncUserResponse")]
    string SyncUser(string query);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFService/SyncUser", ReplyAction="http://tempuri.org/IWCFService/SyncUserResponse")]
    System.Threading.Tasks.Task<string> SyncUserAsync(string query);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IWCFServiceChannel : IWCFService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class WCFServiceClient : System.ServiceModel.ClientBase<IWCFService>, IWCFService
{
    
    public WCFServiceClient()
    {
    }
    
    public WCFServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public WCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public WCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public string WCFVersion()
    {
        return base.Channel.WCFVersion();
    }
    
    public System.Threading.Tasks.Task<string> WCFVersionAsync()
    {
        return base.Channel.WCFVersionAsync();
    }
    
    public System.Collections.Generic.List<string> GetLogTopNRecord(string apiaccess, int topnum)
    {
        return base.Channel.GetLogTopNRecord(apiaccess, topnum);
    }
    
    public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetLogTopNRecordAsync(string apiaccess, int topnum)
    {
        return base.Channel.GetLogTopNRecordAsync(apiaccess, topnum);
    }
    
    public string ReloadSettings(string apiaccess)
    {
        return base.Channel.ReloadSettings(apiaccess);
    }
    
    public System.Threading.Tasks.Task<string> ReloadSettingsAsync(string apiaccess)
    {
        return base.Channel.ReloadSettingsAsync(apiaccess);
    }
    
    public string InitNeo4j()
    {
        return base.Channel.InitNeo4j();
    }
    
    public System.Threading.Tasks.Task<string> InitNeo4jAsync()
    {
        return base.Channel.InitNeo4jAsync();
    }
    
    public System.Collections.Generic.List<string> GetWCFDocument()
    {
        return base.Channel.GetWCFDocument();
    }
    
    public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetWCFDocumentAsync()
    {
        return base.Channel.GetWCFDocumentAsync();
    }
    
    public string GetWCFCache(string APIAccess)
    {
        return base.Channel.GetWCFCache(APIAccess);
    }
    
    public System.Threading.Tasks.Task<string> GetWCFCacheAsync(string APIAccess)
    {
        return base.Channel.GetWCFCacheAsync(APIAccess);
    }
    
    public string GetRequestLogs(string query)
    {
        return base.Channel.GetRequestLogs(query);
    }
    
    public System.Threading.Tasks.Task<string> GetRequestLogsAsync(string query)
    {
        return base.Channel.GetRequestLogsAsync(query);
    }
    
    public string GetActionLogs(string query)
    {
        return base.Channel.GetActionLogs(query);
    }
    
    public System.Threading.Tasks.Task<string> GetActionLogsAsync(string query)
    {
        return base.Channel.GetActionLogsAsync(query);
    }
    
    public string GetLoginLogs(string query)
    {
        return base.Channel.GetLoginLogs(query);
    }
    
    public System.Threading.Tasks.Task<string> GetLoginLogsAsync(string query)
    {
        return base.Channel.GetLoginLogsAsync(query);
    }
    
    public string LoginOneStop(string query)
    {
        return base.Channel.LoginOneStop(query);
    }
    
    public System.Threading.Tasks.Task<string> LoginOneStopAsync(string query)
    {
        return base.Channel.LoginOneStopAsync(query);
    }
    
    public string Login(string query)
    {
        return base.Channel.Login(query);
    }
    
    public System.Threading.Tasks.Task<string> LoginAsync(string query)
    {
        return base.Channel.LoginAsync(query);
    }
    
    public string LogOff(string query)
    {
        return base.Channel.LogOff(query);
    }
    
    public System.Threading.Tasks.Task<string> LogOffAsync(string query)
    {
        return base.Channel.LogOffAsync(query);
    }
    
    public string Verify(string query)
    {
        return base.Channel.Verify(query);
    }
    
    public System.Threading.Tasks.Task<string> VerifyAsync(string query)
    {
        return base.Channel.VerifyAsync(query);
    }
    
    public string RegisterUser(string query)
    {
        return base.Channel.RegisterUser(query);
    }
    
    public System.Threading.Tasks.Task<string> RegisterUserAsync(string query)
    {
        return base.Channel.RegisterUserAsync(query);
    }
    
    public string CheckEmailExisted(string query)
    {
        return base.Channel.CheckEmailExisted(query);
    }
    
    public System.Threading.Tasks.Task<string> CheckEmailExistedAsync(string query)
    {
        return base.Channel.CheckEmailExistedAsync(query);
    }
    
    public string GetUsersByOrgCodeStaffCodes(string query)
    {
        return base.Channel.GetUsersByOrgCodeStaffCodes(query);
    }
    
    public System.Threading.Tasks.Task<string> GetUsersByOrgCodeStaffCodesAsync(string query)
    {
        return base.Channel.GetUsersByOrgCodeStaffCodesAsync(query);
    }
    
    public string GetUserByOrgCodeStaffCode(string query)
    {
        return base.Channel.GetUserByOrgCodeStaffCode(query);
    }
    
    public System.Threading.Tasks.Task<string> GetUserByOrgCodeStaffCodeAsync(string query)
    {
        return base.Channel.GetUserByOrgCodeStaffCodeAsync(query);
    }
    
    public string GetUsersByIDs(string query)
    {
        return base.Channel.GetUsersByIDs(query);
    }
    
    public System.Threading.Tasks.Task<string> GetUsersByIDsAsync(string query)
    {
        return base.Channel.GetUsersByIDsAsync(query);
    }
    
    public string GetUserByID(string query)
    {
        return base.Channel.GetUserByID(query);
    }
    
    public System.Threading.Tasks.Task<string> GetUserByIDAsync(string query)
    {
        return base.Channel.GetUserByIDAsync(query);
    }
    
    public string ActiveUser(string query)
    {
        return base.Channel.ActiveUser(query);
    }
    
    public System.Threading.Tasks.Task<string> ActiveUserAsync(string query)
    {
        return base.Channel.ActiveUserAsync(query);
    }
    
    public string ImportUsers(string query)
    {
        return base.Channel.ImportUsers(query);
    }
    
    public System.Threading.Tasks.Task<string> ImportUsersAsync(string query)
    {
        return base.Channel.ImportUsersAsync(query);
    }
    
    public string ChangeUserActiveFlag(string query)
    {
        return base.Channel.ChangeUserActiveFlag(query);
    }
    
    public System.Threading.Tasks.Task<string> ChangeUserActiveFlagAsync(string query)
    {
        return base.Channel.ChangeUserActiveFlagAsync(query);
    }
    
    public string GetUsersByOrganizationCode(string query)
    {
        return base.Channel.GetUsersByOrganizationCode(query);
    }
    
    public System.Threading.Tasks.Task<string> GetUsersByOrganizationCodeAsync(string query)
    {
        return base.Channel.GetUsersByOrganizationCodeAsync(query);
    }
    
    public string GetUpdateUsersAfterDate(string query)
    {
        return base.Channel.GetUpdateUsersAfterDate(query);
    }
    
    public System.Threading.Tasks.Task<string> GetUpdateUsersAfterDateAsync(string query)
    {
        return base.Channel.GetUpdateUsersAfterDateAsync(query);
    }
    
    public string ForgotPassword(string query)
    {
        return base.Channel.ForgotPassword(query);
    }
    
    public System.Threading.Tasks.Task<string> ForgotPasswordAsync(string query)
    {
        return base.Channel.ForgotPasswordAsync(query);
    }
    
    public string ResetPassword(string query)
    {
        return base.Channel.ResetPassword(query);
    }
    
    public System.Threading.Tasks.Task<string> ResetPasswordAsync(string query)
    {
        return base.Channel.ResetPasswordAsync(query);
    }
    
    public string ForgotPasswordReturnToken(string query)
    {
        return base.Channel.ForgotPasswordReturnToken(query);
    }
    
    public System.Threading.Tasks.Task<string> ForgotPasswordReturnTokenAsync(string query)
    {
        return base.Channel.ForgotPasswordReturnTokenAsync(query);
    }
    
    public string GetMeta(string query)
    {
        return base.Channel.GetMeta(query);
    }
    
    public System.Threading.Tasks.Task<string> GetMetaAsync(string query)
    {
        return base.Channel.GetMetaAsync(query);
    }
    
    public string GetMetadata(string query)
    {
        return base.Channel.GetMetadata(query);
    }
    
    public System.Threading.Tasks.Task<string> GetMetadataAsync(string query)
    {
        return base.Channel.GetMetadataAsync(query);
    }
    
    public string GetMetadataByUserID(string query)
    {
        return base.Channel.GetMetadataByUserID(query);
    }
    
    public System.Threading.Tasks.Task<string> GetMetadataByUserIDAsync(string query)
    {
        return base.Channel.GetMetadataByUserIDAsync(query);
    }
    
    public string GetMetadataByOrganizationID(string query)
    {
        return base.Channel.GetMetadataByOrganizationID(query);
    }
    
    public System.Threading.Tasks.Task<string> GetMetadataByOrganizationIDAsync(string query)
    {
        return base.Channel.GetMetadataByOrganizationIDAsync(query);
    }
    
    public string GetMetadataByOrganizationCode(string query)
    {
        return base.Channel.GetMetadataByOrganizationCode(query);
    }
    
    public System.Threading.Tasks.Task<string> GetMetadataByOrganizationCodeAsync(string query)
    {
        return base.Channel.GetMetadataByOrganizationCodeAsync(query);
    }
    
    public string GetDeviceByID(string query)
    {
        return base.Channel.GetDeviceByID(query);
    }
    
    public System.Threading.Tasks.Task<string> GetDeviceByIDAsync(string query)
    {
        return base.Channel.GetDeviceByIDAsync(query);
    }
    
    public string ChangeDeviceActiveFlag(string query)
    {
        return base.Channel.ChangeDeviceActiveFlag(query);
    }
    
    public System.Threading.Tasks.Task<string> ChangeDeviceActiveFlagAsync(string query)
    {
        return base.Channel.ChangeDeviceActiveFlagAsync(query);
    }
    
    public string GetDevicesByUserID(string query)
    {
        return base.Channel.GetDevicesByUserID(query);
    }
    
    public System.Threading.Tasks.Task<string> GetDevicesByUserIDAsync(string query)
    {
        return base.Channel.GetDevicesByUserIDAsync(query);
    }
    
    public string GetOrganizationByID(string query)
    {
        return base.Channel.GetOrganizationByID(query);
    }
    
    public System.Threading.Tasks.Task<string> GetOrganizationByIDAsync(string query)
    {
        return base.Channel.GetOrganizationByIDAsync(query);
    }
    
    public string GetOrganizations(string query)
    {
        return base.Channel.GetOrganizations(query);
    }
    
    public System.Threading.Tasks.Task<string> GetOrganizationsAsync(string query)
    {
        return base.Channel.GetOrganizationsAsync(query);
    }
    
    public string AddOrganization(string query)
    {
        return base.Channel.AddOrganization(query);
    }
    
    public System.Threading.Tasks.Task<string> AddOrganizationAsync(string query)
    {
        return base.Channel.AddOrganizationAsync(query);
    }
    
    public string UpdateOrganizationByID(string query)
    {
        return base.Channel.UpdateOrganizationByID(query);
    }
    
    public System.Threading.Tasks.Task<string> UpdateOrganizationByIDAsync(string query)
    {
        return base.Channel.UpdateOrganizationByIDAsync(query);
    }
    
    public string GetOrganizationByCode(string query)
    {
        return base.Channel.GetOrganizationByCode(query);
    }
    
    public System.Threading.Tasks.Task<string> GetOrganizationByCodeAsync(string query)
    {
        return base.Channel.GetOrganizationByCodeAsync(query);
    }
    
    public string UpdateOrganizationByCode(string query)
    {
        return base.Channel.UpdateOrganizationByCode(query);
    }
    
    public System.Threading.Tasks.Task<string> UpdateOrganizationByCodeAsync(string query)
    {
        return base.Channel.UpdateOrganizationByCodeAsync(query);
    }
    
    public string GetApplicationByID(string query)
    {
        return base.Channel.GetApplicationByID(query);
    }
    
    public System.Threading.Tasks.Task<string> GetApplicationByIDAsync(string query)
    {
        return base.Channel.GetApplicationByIDAsync(query);
    }
    
    public string GetApplications(string query)
    {
        return base.Channel.GetApplications(query);
    }
    
    public System.Threading.Tasks.Task<string> GetApplicationsAsync(string query)
    {
        return base.Channel.GetApplicationsAsync(query);
    }
    
    public string AddApplication(string query)
    {
        return base.Channel.AddApplication(query);
    }
    
    public System.Threading.Tasks.Task<string> AddApplicationAsync(string query)
    {
        return base.Channel.AddApplicationAsync(query);
    }
    
    public string UpdateApplicationByCode(string query)
    {
        return base.Channel.UpdateApplicationByCode(query);
    }
    
    public System.Threading.Tasks.Task<string> UpdateApplicationByCodeAsync(string query)
    {
        return base.Channel.UpdateApplicationByCodeAsync(query);
    }
    
    public string ChangeApplicationActiveFlagByCode(string query)
    {
        return base.Channel.ChangeApplicationActiveFlagByCode(query);
    }
    
    public System.Threading.Tasks.Task<string> ChangeApplicationActiveFlagByCodeAsync(string query)
    {
        return base.Channel.ChangeApplicationActiveFlagByCodeAsync(query);
    }
    
    public string DeleteApplicationByCode(string query)
    {
        return base.Channel.DeleteApplicationByCode(query);
    }
    
    public System.Threading.Tasks.Task<string> DeleteApplicationByCodeAsync(string query)
    {
        return base.Channel.DeleteApplicationByCodeAsync(query);
    }
    
    public string AddGroupByParentName(string query)
    {
        return base.Channel.AddGroupByParentName(query);
    }
    
    public System.Threading.Tasks.Task<string> AddGroupByParentNameAsync(string query)
    {
        return base.Channel.AddGroupByParentNameAsync(query);
    }
    
    public string AddGroupByParentID(string query)
    {
        return base.Channel.AddGroupByParentID(query);
    }
    
    public System.Threading.Tasks.Task<string> AddGroupByParentIDAsync(string query)
    {
        return base.Channel.AddGroupByParentIDAsync(query);
    }
    
    public string GetRoleByID(string query)
    {
        return base.Channel.GetRoleByID(query);
    }
    
    public System.Threading.Tasks.Task<string> GetRoleByIDAsync(string query)
    {
        return base.Channel.GetRoleByIDAsync(query);
    }
    
    public string GetApplicationRoles(string query)
    {
        return base.Channel.GetApplicationRoles(query);
    }
    
    public System.Threading.Tasks.Task<string> GetApplicationRolesAsync(string query)
    {
        return base.Channel.GetApplicationRolesAsync(query);
    }
    
    public string AddRole(string query)
    {
        return base.Channel.AddRole(query);
    }
    
    public System.Threading.Tasks.Task<string> AddRoleAsync(string query)
    {
        return base.Channel.AddRoleAsync(query);
    }
    
    public string UpdateRoleByAppCodeRoleID(string query)
    {
        return base.Channel.UpdateRoleByAppCodeRoleID(query);
    }
    
    public System.Threading.Tasks.Task<string> UpdateRoleByAppCodeRoleIDAsync(string query)
    {
        return base.Channel.UpdateRoleByAppCodeRoleIDAsync(query);
    }
    
    public string GetRolesByUserIDApplicationID(string query)
    {
        return base.Channel.GetRolesByUserIDApplicationID(query);
    }
    
    public System.Threading.Tasks.Task<string> GetRolesByUserIDApplicationIDAsync(string query)
    {
        return base.Channel.GetRolesByUserIDApplicationIDAsync(query);
    }
    
    public string DeleteRoleByAppCodeRoleName(string query)
    {
        return base.Channel.DeleteRoleByAppCodeRoleName(query);
    }
    
    public System.Threading.Tasks.Task<string> DeleteRoleByAppCodeRoleNameAsync(string query)
    {
        return base.Channel.DeleteRoleByAppCodeRoleNameAsync(query);
    }
    
    public string AddUserToRole(string query)
    {
        return base.Channel.AddUserToRole(query);
    }
    
    public System.Threading.Tasks.Task<string> AddUserToRoleAsync(string query)
    {
        return base.Channel.AddUserToRoleAsync(query);
    }
    
    public string AddGroupToRole(string query)
    {
        return base.Channel.AddGroupToRole(query);
    }
    
    public System.Threading.Tasks.Task<string> AddGroupToRoleAsync(string query)
    {
        return base.Channel.AddGroupToRoleAsync(query);
    }
    
    public string DeleteUserFromRole(string query)
    {
        return base.Channel.DeleteUserFromRole(query);
    }
    
    public System.Threading.Tasks.Task<string> DeleteUserFromRoleAsync(string query)
    {
        return base.Channel.DeleteUserFromRoleAsync(query);
    }
    
    public string DeleteGroupFromRole(string query)
    {
        return base.Channel.DeleteGroupFromRole(query);
    }
    
    public System.Threading.Tasks.Task<string> DeleteGroupFromRoleAsync(string query)
    {
        return base.Channel.DeleteGroupFromRoleAsync(query);
    }
    
    public string UpdateRoleByAppCodeRoleName(string query)
    {
        return base.Channel.UpdateRoleByAppCodeRoleName(query);
    }
    
    public System.Threading.Tasks.Task<string> UpdateRoleByAppCodeRoleNameAsync(string query)
    {
        return base.Channel.UpdateRoleByAppCodeRoleNameAsync(query);
    }
    
    public string GetUsersByOrgCodeAppCodeRoleName(string query)
    {
        return base.Channel.GetUsersByOrgCodeAppCodeRoleName(query);
    }
    
    public System.Threading.Tasks.Task<string> GetUsersByOrgCodeAppCodeRoleNameAsync(string query)
    {
        return base.Channel.GetUsersByOrgCodeAppCodeRoleNameAsync(query);
    }
    
    public string GetGroupsByAppCodeRoleName(string query)
    {
        return base.Channel.GetGroupsByAppCodeRoleName(query);
    }
    
    public System.Threading.Tasks.Task<string> GetGroupsByAppCodeRoleNameAsync(string query)
    {
        return base.Channel.GetGroupsByAppCodeRoleNameAsync(query);
    }
    
    public string GetRolesByAppCodeOrgCodeStaffCode(string query)
    {
        return base.Channel.GetRolesByAppCodeOrgCodeStaffCode(query);
    }
    
    public System.Threading.Tasks.Task<string> GetRolesByAppCodeOrgCodeStaffCodeAsync(string query)
    {
        return base.Channel.GetRolesByAppCodeOrgCodeStaffCodeAsync(query);
    }
    
    public string GetGroupsByOrgCodeStaffCode(string query)
    {
        return base.Channel.GetGroupsByOrgCodeStaffCode(query);
    }
    
    public System.Threading.Tasks.Task<string> GetGroupsByOrgCodeStaffCodeAsync(string query)
    {
        return base.Channel.GetGroupsByOrgCodeStaffCodeAsync(query);
    }
    
    public string GetApplicationCodesByOrgCodeStaffCode(string query)
    {
        return base.Channel.GetApplicationCodesByOrgCodeStaffCode(query);
    }
    
    public System.Threading.Tasks.Task<string> GetApplicationCodesByOrgCodeStaffCodeAsync(string query)
    {
        return base.Channel.GetApplicationCodesByOrgCodeStaffCodeAsync(query);
    }
    
    public string SyncCodeTable(string query)
    {
        return base.Channel.SyncCodeTable(query);
    }
    
    public System.Threading.Tasks.Task<string> SyncCodeTableAsync(string query)
    {
        return base.Channel.SyncCodeTableAsync(query);
    }
    
    public string SyncUser(string query)
    {
        return base.Channel.SyncUser(query);
    }
    
    public System.Threading.Tasks.Task<string> SyncUserAsync(string query)
    {
        return base.Channel.SyncUserAsync(query);
    }
}
